---
export const prerender = false
import groq from 'groq'
import { sanity } from '../../lib/sanity'
import { urlFor } from '../../lib/image'
import { toHTML } from '@portabletext/to-html'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { getSettings } from '../../lib/getSettings'

const { lang, slug } = Astro.params
const LANGS = new Set(['fr','es','en'])
if (!lang || !LANGS.has(lang)) return Astro.redirect('/fr')

const query = groq`coalesce(
  *[_type=="project" && slug.current==$slug && language==$lang][0],
  *[_type=="project" && slug.current==$slug && language=="fr"][0]
){
  title, language, category, coverImage, videoUrl,
  "gallery": coalesce(galleryRef->images[], gallery[]),
  description
}`
const data = await sanity.fetch(query, { slug, lang })
if (!data) return Astro.redirect('/404')

const settings = await getSettings(lang)
const bodyHtml = toHTML(data.description || [])
function embed(url?: string) {
  if (!url) return null
  const yt = url.match(/(?:v=|youtu\.be\/)([\w-]{11})/)
  if (yt) return `https://www.youtube.com/embed/${yt[1]}`
  const vm = url.match(/vimeo\.com\/(\d+)/)
  if (vm) return `https://player.vimeo.com/video/${vm[1]}`
  return url
}
const videoSrc = embed(data.videoUrl)
---
<BaseLayout lang={lang as any} title={data.title} settings={settings}>
  <style>
    .grid { display:grid; gap:1rem; grid-template-columns:repeat(auto-fill,minmax(220px,1fr)); }
    img { width:100%; height:auto; display:block; }
    figure { margin:0 0 1rem; }
  </style>

  <h1>{data.title}</h1>
  <p>{data.category}</p>

  {data.coverImage && (
    <figure>
      <img src={urlFor(data.coverImage).width(1600).auto('format').url()} alt={data.coverImage.alt || ''} loading="eager" />
    </figure>
  )}

  {videoSrc && (
    <div style="aspect-ratio:16/9; margin: 1rem 0;">
      <iframe src={videoSrc} width="100%" height="100%" frameborder="0" allowfullscreen loading="lazy"></iframe>
    </div>
  )}

  {Array.isArray(data.gallery) && data.gallery.length > 0 && (
    <>
      <h2>Galerie</h2>
      <div class="grid">
        {data.gallery.map((img) => (
          <img src={urlFor(img).width(1200).auto('format').url()} alt={img.alt || ''} loading="lazy" />
        ))}
      </div>
    </>
  )}

  {bodyHtml && <div style="margin-top:1rem;" set:html={bodyHtml}></div>}
</BaseLayout>
