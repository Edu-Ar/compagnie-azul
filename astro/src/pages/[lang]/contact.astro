---
export const prerender = false
import groq from 'groq'
import { sanity } from '../../lib/sanity'
import { toHTML } from '@portabletext/to-html'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { getSettings } from '../../lib/getSettings'

const { lang } = Astro.params
const LANGS = new Set(['fr','es','en'])
if (!lang || !LANGS.has(lang)) return Astro.redirect('/fr')

const q = groq`{
  "page": coalesce(
    *[_type=="legalPage" && language==$lang && slug.current=="contact"][0],
    *[_type=="legalPage" && language=="fr"  && slug.current=="contact"][0]
  ){ title, body },
  "settings": coalesce(
    *[_type=="siteSettings" && language==$lang][0]{social,contactEmail},
    *[_type=="siteSettings" && language=="fr"][0]{social,contactEmail}
  )
}`
const data = await sanity.fetch(q, { lang })
const settings = await getSettings(lang as 'fr'|'es'|'en')
const html = toHTML(data?.page?.body || [])
---

<BaseLayout lang={lang as any} title={data?.page?.title || 'Contact'} settings={settings}>
  <div set:html={html}></div>
  {(settings?.settings?.social || settings?.settings?.contactEmail) && (
    <p style="margin-top:1rem">
      {settings.settings.social?.instagram && <a href={settings.settings.social.instagram} target="_blank" rel="noopener">Instagram</a>}{" "}
      {settings.settings.social?.facebook  && <>· <a href={settings.settings.social.facebook} target="_blank" rel="noopener">Facebook</a></>}
      {settings.settings.contactEmail && <> · <a href={`mailto:${settings.settings.contactEmail}`}>{settings.settings.contactEmail}</a></>}
    </p>
  )}
</BaseLayout>
